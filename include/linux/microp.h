#ifndef __MICROP_DATA_DEF_H
#define __MICROP_DATA_DEF_H


struct microP_platform_data{
        int intr_gpio;
};

enum MICROP_CMD_ID {
    MICROP_HW_ID=0,
    MICROP_FW_VER,
    MICROP_GPIO_INPUT_LEVEL,
    MICROP_GPIO_OUTPUT_LEVEL,
    MICROP_CHARGING_STATUS,
    MICROP_GAUGE_ID,
    MICROP_GAUGE_CAP,
    MICROP_GAUGE_TMP,
    MICROP_USB_DET,
    MICROP_PWM,            
    MICROP_INTR_STATUS,
    MICROP_INTR_EN,
    MICROP_BOOT_SELECTION,
    MICROP_SET_BOOT_LDROM,
    MICROP_SET_BOOT_APROM,
    MICROP_PROGRAM_APROM,
    MICROP_APROM_CHECKSUM,
    MICROP_SOFTWARE_OFF,
    MICROP_LDROM_ID_CODE,
    MICROP_GPIO_OUTPUT_BIT_SET,
    MICROP_GPIO_OUTPUT_BIT_CLR,
    MICROP_INTR_EN_BIT_SET,
    MICROP_INTR_EN_BIT_CLR,


};

// define ioctl code
#define ASUS_MICROP_IOC_TYPE    0xa1
#define ASUS_MICROP_FW_UPDATE 	_IOWR(ASUS_MICROP_IOC_TYPE,	1,	int)
#define ASUS_MICROP_CHECK_CONNECTED 	_IOWR(ASUS_MICROP_IOC_TYPE,	2,	int)
#define ASUS_MICROP_GET_FW_VERSION 	_IOWR(ASUS_MICROP_IOC_TYPE,	3,	int)
#define ASUS_MICROP_ON_OFF_GPS_ON_PAD 	_IOWR(ASUS_MICROP_IOC_TYPE,	4,	int)
#define ASUS_MICROP_MAX_NR  4




#endif

